import "utils/pack/bool/pack256.zok" as pack256 
import "utils/pack/bool/nonStrictUnpack256.zok" as nonStrictUnpack256 

from "./keccak_f-bool" import main as keccak_f
from "./keccak_f-bool" import booleanXOR as booleanXOR

def fieldXOR(field input1, field input2) -> (field):
    bool[256] input1_bool = nonStrictUnpack256(input1)
    bool[256] input2_bool = nonStrictUnpack256(input2)
    bool[256] xorResult = [false; 256]
    for field ii in 0..256 do 
        xorResult[ii] = booleanXOR(input1_bool[ii], input2_bool[ii])
    endfor
    field xor = pack256(xorResult)
    return xor 

def sponge(field[9] M) -> (field[25]):

    M[5] = 1
    M[8] = 9223372036854775808

    //field r = 72
    //field w = 8
    // is Msize necessary?
    //field Msize = 72  // 9*8 

    field[25] S = [0; 25]

    // Absorbing Phase
    for field ii in 0..1 do // 0..72
        for field jj in 0..5 do // 0..5
            for field kk in 0..5 do // 0..5
                //S[5*x+y] = S[5*x+y] ^ M[i*9 + x + 5*y];
                S[kk*5+jj] = if (kk+5*jj) < 9 then fieldXOR(S[kk*5+jj], M[ii*9 + kk + 5*jj]) else 0 fi
            endfor
        endfor

        S = keccak_f(S)
    endfor


    
    return S


def main() -> (field[25]):

    //field[25] A_field = [6,5,8,8,1320,2,2,3,0,0,120,0,0,0,40,0,0,0,0,0,0,3,2,1,1] 
    //return keccak_f(A_field)

    field[9] M = [1,2,3,4,5,6,7,8,9]

    return sponge(M)